{"version":3,"sources":["icons/mask.png","icons/hospital.png","icons/pharmacy.png","components/views/NavBar/NavBar.js","components/views/styles/color.js","utils/usePromise.js","utils/api.js","config.js","components/views/styles/ListStyle.js","modules/position.js","utils/importIcons.js","components/views/Mask/Mask.js","components/views/Map/Map.js","components/views/SearchAddress/SearchAddress.js","components/views/Hospital/Hospital.js","components/views/Pharmacy/Pharmacy.js","components/App.js","serviceWorker.js","modules/store.js","index.js"],"names":["module","exports","NavBarBlock","styled","div","NavBar","exact","to","className","activeClassName","usePromise","promiseCreator","deps","useState","loading","setLoading","resolved","setResolved","error","setError","useEffect","a","result","getLatLng","si","gu","dong","axios","get","headers","Authorization","getPlace","code","lat","lng","query","ListCover","List","ListItem","props","textColor","setAddress","createAction","data","setMap","setCenterListClick","updateMap","updateMode","position","handleActions","state","action","name","payload","value","produce","draft","address","detail","map","window","kakao","maps","Map","container","options","marker","push","id","y","x","coords","LatLng","panTo","mode","GET_LATLNG","location","setCenter","maskIcon","hospitalIcon","pharmacyIcon","connect","dispatch","m","response","console","log","items","stores","icon","MarkerImage","icons","Size","item","Marker","clickable","image","getMap","iwContent","infowindow","InfoWindow","content","event","addListener","open","close","key","onClick","remain_stat","addr","created_at","stock_at","MapBlock","document","getElementById","center","level","style","display","justifyContent","DropDown","type","api","Number","documents","sigu","require","sigudong","onChange","target","i","j","element","color","place_name","road_address_name","category_name","Block","App","flexFlow","marginRight","path","component","Mask","Hospital","Pharmacy","Boolean","hostname","match","rootReducer","combineReducers","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.56640dd0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mask.bd2cf6c1.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.77bfab85.png\";","module.exports = __webpack_public_path__ + \"static/media/pharmacy.b8759239.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { green, gray, darkgray } from \"../styles/color\";\n\nconst NavBarBlock = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 2rem;\n  /* padding: 1rem 0rem; */\n\n  .btn {\n    text-decoration: none;\n    font-weight: 700;\n    font-size: 1.2rem;\n    padding: 0.7rem 2rem;\n    border-radius: 30px;\n    color: gray;\n    :hover {\n      opacity: 0.7;\n    }\n    :active {\n      opacity: 2;\n    }\n\n    &.active {\n      color: white;\n      background: ${green};\n    }\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <NavBarBlock>\n      <NavLink exact to=\"/\" className=\"btn\" activeClassName=\"active\">\n        마스크\n      </NavLink>\n      <NavLink to=\"/hospital\" className=\"btn\" activeClassName=\"active\">\n        병원\n      </NavLink>\n      <NavLink to=\"/pharmacy\" className=\"btn\" activeClassName=\"active\">\n        약국\n      </NavLink>\n    </NavBarBlock>\n  );\n};\n\nexport default NavBar;\n","export const green = \"#038C5A\";\nexport const gray = \"#d6d7d8\";\nexport const darkgray = \"#cccccc\";\n","import { useState, useEffect } from \"react\";\n\nconst usePromise = (promiseCreator, deps) => {\n  const [loading, setLoading] = useState(false);\n  const [resolved, setResolved] = useState(null);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      try {\n        const result = await promiseCreator();\n        setResolved(result);\n      } catch (e) {\n        setError(e);\n      }\n      setLoading(false);\n    })();\n  }, deps);\n  return [loading, resolved, error];\n};\n\nexport default usePromise;\n","import axios from \"axios\";\nimport { KAKAO_MAP_REST_API_KEY, MASK_URL } from \"config\";\n\n// 마스크 재고 요청\nexport const getMask = (lat, lng, m) =>\n  axios.get(`${MASK_URL}?lat=${lat}&lng=${lng}&m=${m}`);\n\n// 주소 -> 좌표 검색\nexport const getLatLng = (si, gu, dong) =>\n  axios.get(\n    `https://dapi.kakao.com/v2/local/search/address.json?query=${si} ${gu} ${dong}`,\n    {\n      headers: {\n        Authorization: `KakaoAK ${KAKAO_MAP_REST_API_KEY}`,\n      },\n    }\n  );\n\n// 병원(HP8), 약국(PM9) 검색\nexport const getPlace = (code, lat, lng, query) =>\n  axios.get(\n    `https://dapi.kakao.com/v2/local/search/keyword.json?category_group_code=${code}&y=${lat}&x=${lng}&radius=2000&query=${query}`,\n    {\n      headers: {\n        Authorization: `KakaoAK ${KAKAO_MAP_REST_API_KEY}`,\n      },\n    }\n  );\n","export const KAKAO_MAP_REST_API_KEY = \"2cfaeeee24cf1409d4f8fe202ab57261\";\nexport const MASK_URL =\n  \"https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json\";\n","import styled from \"styled-components\";\nimport * as color from \"./color\";\n\nexport const ListCover = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: center;\n  span {\n    margin: 1rem;\n    font-size: 1.2rem;\n    font-weight: 700;\n    color: ${color.green};\n    margin: 2rem 0rem;\n  }\n`;\n\nexport const List = styled.div`\n  height: 35rem;\n  width: 20rem;\n  overflow: hidden;\n  overflow-y: scroll;\n`;\n\nexport const ListItem = styled.div`\n  background: white;\n  border-radius: 5px;\n  margin: 1.5rem 1rem;\n  padding: 0.3rem;\n  box-shadow: 5px 10px 15px 3px #f3f4f5;\n  transition: 0.3s;\n  :hover {\n    cursor: pointer;\n    z-index: 1;\n    transform: scale(1.1);\n    transition: 0.3s;\n  }\n  p {\n    font-size: 0.9rem;\n    color: gray;\n    margin: 0.3rem 0rem;\n  }\n\n  color: ${(props) => {\n    switch (props.textColor) {\n      case \"plenty\":\n        return \"#038c5a\";\n      case \"some\":\n        return \"#eac351\";\n      case \"few\":\n        return \"#a81c1a\";\n      case \"empty\":\n        return \"black\";\n      default:\n        return \"gray\";\n    }\n  }};\n`;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport * as api from \"utils/api\";\n\n// action type definition\nconst SET_ADDRESS = \"position/SET_ADDRESS\";\nconst SET_MAP = \"position/SET_MAP\";\nconst SET_MARKER = \"position/SET_MARKER\";\nconst SET_CENTER_LIST_CLICK = \"position/SET_CENTER_LIST_CLICK\";\n\nconst UPDATE_MAP = \"position/UPDATE_MAP\";\nconst UPDATE_MODE = \"position/UPDATE_MODE\";\n\nconst GET_LATLNG = \"position/GET_LATLNG\";\nconst GET_LATLNG_SUCCESS = \"position/GET_LATLNG_SUCCESS\";\nconst GET_LATLNG_FAILURE = \"position/GET_LATLNG_FAILURE\";\n\n// action generator definition\nexport const setAddress = createAction(SET_ADDRESS, (data) => data);\nexport const setMap = createAction(SET_MAP, (data) => data);\nexport const setMarker = createAction(SET_MARKER, (data) => data);\nexport const setCenterListClick = createAction(\n  SET_CENTER_LIST_CLICK,\n  (data) => data\n);\n\nexport const updateMap = createAction(UPDATE_MAP, (data) => data);\nexport const updateMode = createAction(UPDATE_MODE, (data) => data);\n\nexport const getLatLng = (si, gu, dong) => async (dispatch) => {\n  dispatch({ type: GET_LATLNG });\n  try {\n    const response = await api.getLatLng(si, gu, dong);\n    dispatch({\n      type: GET_LATLNG_SUCCESS,\n      payload: {\n        lat: Number(response.data.documents[0].y),\n        lng: Number(response.data.documents[0].x),\n      },\n    });\n  } catch (e) {\n    dispatch({ type: GET_LATLNG_FAILURE, payload: e, error: true });\n    throw e;\n  }\n};\n\n// initial state\nconst initState = {\n  mode: \"PHARMACY\",\n  loading: { GET_LATLNG: false },\n  map: null,\n  location: { lat: 35.1798200522868, lng: 129.075087492149 },\n  address: { si: \"부산광역시\", gu: \"\", dong: \"\", detail: \"\" },\n};\n\nconst position = handleActions(\n  {\n    // [INCREASE]: (state) => ({ ...state, number: state.number + 1 }),\n    [SET_ADDRESS]: (state, action) => {\n      const name = action.payload.name;\n      const value = action.payload.value;\n\n      switch (name) {\n        case \"si\":\n          return produce(state, (draft) => {\n            if (value === \"\") {\n              draft.address.si = \"\";\n            } else {\n              draft.address[name] = value;\n            }\n            draft.address.gu = \"\";\n            draft.address.dong = \"\";\n            draft.address.detail = \"\";\n          });\n        case \"gu\":\n          return produce(state, (draft) => {\n            if (value === \"\") {\n              draft.address.gu = \"\";\n            } else {\n              draft.address[name] = value;\n            }\n            draft.address.dong = \"\";\n            draft.address.detail = \"\";\n          });\n        case \"dong\":\n          return produce(state, (draft) => {\n            if (value === \"\") {\n              draft.address.dong = \"\";\n            } else {\n              draft.address[name] = value;\n            }\n            draft.address.detail = \"\";\n          });\n        default:\n          return produce(state, (draft) => {\n            draft.address[name] = value;\n          });\n      }\n    },\n\n    [SET_MAP]: (state, action) =>\n      produce(state, (draft) => {\n        draft.map = new window.kakao.maps.Map(\n          action.payload.container,\n          action.payload.options\n        );\n      }),\n\n    [SET_MARKER]: (state, action) =>\n      produce(state, (draft) => {\n        draft.marker.push({\n          id: action.payload.id,\n          y: action.payload.y,\n          x: action.payload.x,\n        });\n      }),\n\n    [SET_CENTER_LIST_CLICK]: (state, action) =>\n      produce(state, (draft) => {\n        const coords = new window.kakao.maps.LatLng(\n          action.payload.y,\n          action.payload.x\n        );\n        draft.map.panTo(coords);\n      }),\n\n    [UPDATE_MAP]: (state, action) =>\n      produce(state, (draft) => {\n        draft.map = action.payload.map;\n      }),\n\n    [UPDATE_MODE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.mode = action.payload.mode;\n      }),\n\n    [GET_LATLNG]: (state) =>\n      produce(state, (draft) => {\n        draft.loading.GET_LATLNG = true;\n      }),\n    [GET_LATLNG_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.loading.GET_LATLNG = false;\n        draft.location.lat = action.payload.lat;\n        draft.location.lng = action.payload.lng;\n        const coords = new window.kakao.maps.LatLng(\n          action.payload.lat,\n          action.payload.lng\n        );\n        draft.map.setCenter(coords);\n      }),\n    [GET_LATLNG_FAILURE]: (state) =>\n      produce(state, (draft) => {\n        draft.loading.GET_LATLNG = false;\n      }),\n  },\n  initState\n);\n\nexport default position;\n","import maskIcon from \"icons/mask.png\";\nimport hospitalIcon from \"icons/hospital.png\";\nimport pharmacyIcon from \"icons/pharmacy.png\";\n\nexport default { maskIcon, hospitalIcon, pharmacyIcon };\n","/* global kakao */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport usePromise from \"utils/usePromise\";\nimport { getMask } from \"utils/api\";\nimport { ListCover, List, ListItem } from \"components/views/styles/ListStyle\";\nimport { setCenterListClick, updateMap, updateMode } from \"modules/position\";\nimport icons from \"utils/importIcons\";\n\nconst Mask = ({ location, map, setCenterListClick, updateMap, updateMode }) => {\n  const [loading, response, error] = usePromise(() => {\n    (() => updateMode({ mode: \"MASK\" }))();\n    return getMask(location.lat, location.lng, 2000);\n  }, [location]);\n\n  if (loading) {\n    return <div>로딩중 . . .</div>;\n  }\n  if (error) {\n    console.log(error);\n    return <div>error</div>;\n  }\n  if (!response) {\n    return null;\n  }\n\n  const items = response.data.stores;\n  const icon = new window.kakao.maps.MarkerImage(\n    icons.maskIcon,\n    new window.kakao.maps.Size(40, 48)\n  );\n\n  return (\n    <ListCover>\n      <span>마스크 판매처 검색</span>\n      <List>\n        {items.map((item) => {\n          const marker = new window.kakao.maps.Marker({\n            map: map,\n            position: new window.kakao.maps.LatLng(item.lat, item.lng),\n            clickable: true,\n            image: icon,\n          });\n          marker.setMap(map);\n          (() => updateMap({ map: marker.getMap() }))();\n\n          const iwContent =\n            '<div style=\"padding:5px; fontSize: 0.5rem\">' +\n            item.name +\n            \"</div>\";\n          const infowindow = new kakao.maps.InfoWindow({\n            content: iwContent,\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            infowindow.open(map, marker);\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n\n          return (\n            <ListItem\n              key={item.code}\n              onClick={() => setCenterListClick({ y: item.lat, x: item.lng })}\n              textColor={item.remain_stat}\n            >\n              <h3>{item.name}</h3>\n              <p>{item.addr}</p>\n              <p>데이터 생성일: {item.created_at}</p>\n              <p>입고시간: {item.stock_at}</p>\n            </ListItem>\n          );\n        })}\n      </List>\n    </ListCover>\n  );\n};\n\nexport default connect(\n  ({ position }) => ({\n    location: position.location,\n    map: position.map,\n  }),\n  (dispatch) => ({\n    setCenterListClick: (data) => dispatch(setCenterListClick(data)),\n    updateMap: (data) => dispatch(updateMap(data)),\n    updateMode: (data) => dispatch(updateMode(data)),\n  })\n)(Mask);\n","import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { setMap } from \"modules/position\";\n\nconst MapBlock = styled.div`\n  width: 30rem;\n  height: 30rem;\n  border-radius: 0.5rem;\n`;\n\nconst Map = ({ mode, location, setMap }) => {\n  useEffect(() => {\n    let container = document.getElementById(\"map\");\n    let options = {\n      center: new window.kakao.maps.LatLng(location.lat, location.lng),\n      level: 4,\n    };\n    (() => setMap({ container, options }))();\n  }, [mode]);\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\" }}>\n      <MapBlock id=\"map\"></MapBlock>\n    </div>\n  );\n};\n\nexport default connect(\n  ({ position }) => ({\n    mode: position.mode,\n    location: position.location,\n  }),\n  (dispatch) => ({\n    setMap: (data) => dispatch(setMap(data)),\n  })\n)(Map);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { setAddress, getLatLng } from \"modules/position\";\nimport { GoSearch } from \"react-icons/go\";\nimport { AiFillDownCircle } from \"react-icons/ai\";\nimport { green } from \"../styles/color\";\n\nconst DropDown = styled.div`\n  select {\n    color: gray;\n    margin: 2rem 0rem;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 0.7rem;\n    font-size: 1rem;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n  }\n  button {\n    font-size: 1rem;\n    padding: 0.5rem 0.7rem;\n    border: none;\n    background: ${green};\n    cursor: pointer;\n  }\n`;\n\nconst SearchAddress = ({ address, setAddress, getLatLng }) => {\n  const sigu = require(\"utils/sigu.json\");\n  const sigudong = require(\"utils/sigudong.json\");\n\n  return (\n    <DropDown>\n      <select\n        name=\"si\"\n        onChange={(event) =>\n          setAddress({ name: \"si\", value: event.target.value })\n        }\n        value={address.si}\n      >\n        <option value=\"\">시도명</option>\n        {sigu.map((i) => (\n          <option key={i.si} value={i.si}>\n            {i.si}\n          </option>\n        ))}\n      </select>\n\n      <select\n        name=\"gu\"\n        onChange={(event) =>\n          setAddress({ name: \"gu\", value: event.target.value })\n        }\n        value={address.gu}\n      >\n        <option value=\"\">시군구명</option>\n        {address.si !== null &&\n          sigu.map((i) => {\n            if (i.si === address.si) {\n              return i[\"gu\"].map((j) => (\n                <option key={j} value={j}>\n                  {j}\n                </option>\n              ));\n            }\n          })}\n      </select>\n\n      <select\n        name=\"dong\"\n        onChange={(event) =>\n          setAddress({ name: \"dong\", value: event.target.value })\n        }\n        value={address.dong}\n      >\n        <option value=\"\">읍면동명</option>\n        {address.gu !== null &&\n          sigudong.map((element) => {\n            if (\n              element.si === address.si &&\n              element.gu === address.gu &&\n              element.dong\n            ) {\n              return (\n                <option key={element.dong} value={element.dong}>\n                  {element.dong}\n                </option>\n              );\n            }\n          })}\n      </select>\n\n      <button onClick={() => getLatLng(address.si, address.gu, address.dong)}>\n        <GoSearch color=\"#ffffff\" />\n      </button>\n    </DropDown>\n  );\n};\n\nexport default connect(\n  ({ position }) => ({\n    address: position.address,\n  }),\n  (dispatch) => ({\n    setAddress: (data) => dispatch(setAddress(data)),\n    getLatLng: (si, gu, dong) => dispatch(getLatLng(si, gu, dong)),\n  })\n)(SearchAddress);\n","/* global kakao */\nimport React, { useEffect, useMemo } from \"react\";\nimport usePromise from \"utils/usePromise\";\nimport { getPlace } from \"utils/api\";\nimport { connect } from \"react-redux\";\nimport { ListCover, List, ListItem } from \"components/views/styles/ListStyle\";\nimport { setCenterListClick, updateMap, updateMode } from \"modules/position\";\nimport icons from \"utils/importIcons\";\n\nconst Hospital = ({\n  location,\n  map,\n  setCenterListClick,\n  updateMap,\n  updateMode,\n}) => {\n  const [loading, response, error] = usePromise(() => {\n    (() => updateMode({ mode: \"HOSPITAL\" }))();\n    return getPlace(\"HP8\", location.lat, location.lng, \"병원\");\n  }, [location]);\n\n  if (loading) {\n    return <div>로딩중 . . .</div>;\n  }\n  if (error) {\n    console.log(error);\n    return <div>error</div>;\n  }\n  if (!response) {\n    return null;\n  }\n\n  const items = response.data.documents;\n  const icon = new window.kakao.maps.MarkerImage(\n    icons.hospitalIcon,\n    new window.kakao.maps.Size(40, 48)\n  );\n\n  return (\n    <ListCover>\n      <span>병원 검색</span>\n      <List>\n        {items.map((item) => {\n          const marker = new window.kakao.maps.Marker({\n            map: map,\n            position: new window.kakao.maps.LatLng(item.y, item.x),\n            clickable: true,\n            image: icon,\n          });\n          marker.setMap(map);\n          (() => updateMap({ map: marker.getMap() }))();\n\n          const iwContent =\n            '<div style=\"padding:5px; fontSize: 0.5rem\">' +\n            item.place_name +\n            \"</div>\";\n          const infowindow = new kakao.maps.InfoWindow({\n            content: iwContent,\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            infowindow.open(map, marker);\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n\n          return (\n            <ListItem\n              key={item.id}\n              onClick={() => setCenterListClick({ y: item.y, x: item.x })}\n            >\n              <h3>{item.place_name}</h3>\n              <p>{item.road_address_name}</p>\n              <p>{item.category_name}</p>\n            </ListItem>\n          );\n        })}\n      </List>\n    </ListCover>\n  );\n};\n\nexport default connect(\n  ({ position }) => ({\n    location: position.location,\n    map: position.map,\n  }),\n  (dispatch) => ({\n    setCenterListClick: (data) => dispatch(setCenterListClick(data)),\n    updateMap: (data) => dispatch(updateMap(data)),\n    updateMode: (data) => dispatch(updateMode(data)),\n  })\n)(Hospital);\n","/* global kakao */\nimport React from \"react\";\nimport usePromise from \"utils/usePromise\";\nimport { getPlace } from \"utils/api\";\nimport { connect } from \"react-redux\";\nimport { ListCover, List, ListItem } from \"components/views/styles/ListStyle\";\nimport { setCenterListClick, updateMap, updateMode } from \"modules/position\";\nimport icons from \"utils/importIcons\";\n\nconst Pharmacy = ({\n  location,\n  map,\n  setCenterListClick,\n  updateMap,\n  updateMode,\n}) => {\n  const [loading, response, error] = usePromise(() => {\n    (() => updateMode({ mode: \"PHARMACY\" }))();\n    return getPlace(\"PM9\", location.lat, location.lng, \"약국\");\n  }, [location]);\n\n  if (loading) {\n    return <div>로딩중 . . .</div>;\n  }\n  if (error) {\n    console.log(error);\n    return <div>error</div>;\n  }\n  if (!response) {\n    return null;\n  }\n\n  const items = response.data.documents;\n  const icon = new window.kakao.maps.MarkerImage(\n    icons.pharmacyIcon,\n    new window.kakao.maps.Size(40, 48)\n  );\n\n  return (\n    <ListCover>\n      <span>약국 검색</span>\n      <List>\n        {items.map((item) => {\n          const marker = new window.kakao.maps.Marker({\n            map: map,\n            position: new window.kakao.maps.LatLng(item.y, item.x),\n            clickable: true,\n            image: icon,\n          });\n          marker.setMap(map);\n          (() => updateMap({ map: marker.getMap() }))();\n\n          const iwContent =\n            '<div style=\"padding:5px; fontSize: 0.5rem\">' +\n            item.place_name +\n            \"</div>\";\n          const infowindow = new kakao.maps.InfoWindow({\n            content: iwContent,\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseover\", function () {\n            infowindow.open(map, marker);\n          });\n\n          kakao.maps.event.addListener(marker, \"mouseout\", function () {\n            infowindow.close();\n          });\n\n          return (\n            <ListItem\n              key={item.id}\n              onClick={() => setCenterListClick({ y: item.y, x: item.x })}\n            >\n              <h3>{item.place_name}</h3>\n              <p>{item.road_address_name}</p>\n              <p>{item.category_name}</p>\n            </ListItem>\n          );\n        })}\n      </List>\n    </ListCover>\n  );\n};\n\nexport default connect(\n  ({ position }) => ({\n    location: position.location,\n    map: position.map,\n  }),\n  (dispatch) => ({\n    setCenterListClick: (data) => dispatch(setCenterListClick(data)),\n    updateMap: (data) => dispatch(updateMap(data)),\n    updateMode: (data) => dispatch(updateMode(data)),\n  })\n)(Pharmacy);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Mask from \"./views/Mask/Mask\";\nimport Map from \"./views/Map/Map\";\nimport styled from \"styled-components\";\nimport SearchAddress from \"./views/SearchAddress/SearchAddress\";\nimport Hospital from \"./views/Hospital/Hospital\";\nimport Pharmacy from \"./views/Pharmacy/Pharmacy\";\n\nconst Block = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <div style={{ display: \"flex\", flexFlow: \"row wrap\" }}>\n          <Block style={{ marginRight: \"5rem\" }}>\n            <NavBar />\n            <SearchAddress />\n            <Map />\n          </Block>\n          <Block>\n            <Switch>\n              <Route exact path=\"/\" component={Mask} />\n              <Route path=\"/hospital\" component={Hospital} />\n              <Route path=\"/pharmacy\" component={Pharmacy} />\n            </Switch>\n          </Block>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { combineReducers, createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\nimport position from \"./position\";\n\nconst rootReducer = combineReducers({\n  position,\n});\n\nexport default createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./modules/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}