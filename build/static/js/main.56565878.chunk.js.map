{"version":3,"sources":["components/views/NavBar/NavBar.js","components/views/styles/color.js","components/views/styles/PlaceStyle.js","utils/api.js","config.js","utils/importIcons.js","components/views/Places/placeUtils.js","modules/initState.js","modules/places.js","components/views/Places/Mask/Mask.js","modules/position.js","components/views/Map/MapOptionButton.js","components/views/Map/Map.js","components/views/SearchAddress/SearchAddress.js","components/views/Places/Hospital/Hospital.js","components/views/Places/Pharmacy/Pharmacy.js","components/App.js","serviceWorker.js","modules/store.js","index.js","icons/mask.png","icons/hospital.png","icons/pharmacy.png","icons/curr_mask.png","icons/curr_hospital.png","icons/curr_pharmacy.png"],"names":["NavBarBlock","styled","div","NavBar","exact","to","className","activeClassName","ListCover","List","ListItem","props","textColor","getMask","lat","lng","m","axios","get","getLatLng","si","gu","dong","detail","headers","Authorization","getPlace","code","query","mask","hospital","pharmacy","curr_mask","curr_hospital","curr_pharmacy","setMarkerInfo","mode","item","marker","map","content","document","createElement","id","innerHTML","name","remain_stat","getMaskCount","place_name","setAttribute","activeId","timeoutId","y","x","position","kakao","maps","LatLng","customOverlay","CustomOverlay","yAnchor","setMap","mouseOverHandler","window","clearTimeout","mouseOutHandler","setTimeout","event","addListener","addEventListener","getMarker","iconImg","icon","MarkerImage","Size","scroller","Scroll","Marker","clickable","image","scrollTo","duration","delay","smooth","containerId","offset","initState","mapContainer","mapCover","location","address","loading","GET_LATLNG","GET_PLACE","items","currMarker","markerList","setMarker","createAction","data","setCurrMarker","setCenterListClick","updateMode","getPlaces","option","dispatch","a","type","api","response","stores","documents","payload","error","places","handleActions","state","action","produce","draft","push","curr","newCurr","forEach","i","icons","toLowerCase","coords","panTo","connect","meter","useEffect","Element","index","key","onClick","style","margin","addr","created_at","stock_at","setAddress","setMapLevel","setCenterPinClick","value","removeChild","Map","container","options","level","getLevel","setLevel","center","getCenter","getLat","getLng","setCenter","OptionButtonBlock","Button","getElementById","appendChild","display","justifyContent","flexFlow","SearchAddressBlock","DropDownInputCover","DropDown","Input","Number","alert","sigu","require","sigudong","onChange","target","j","filter","placeholder","color","road_address_name","category_name","Block","App","basename","process","marginRight","path","component","Mask","Hospital","Pharmacy","Boolean","hostname","match","reducer","reduceReducers","createStore","composeWithDevTools","applyMiddleware","ReduxThunk","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message","module","exports"],"mappings":"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","file":"static/js/main.56565878.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\nimport { green } from \"../styles/color\";\n\nconst NavBarBlock = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  margin-top: 2rem;\n  /* padding: 1rem 0rem; */\n\n  .btn {\n    text-decoration: none;\n    font-weight: 700;\n    font-size: 1.2rem;\n    padding: 0.7rem 2rem;\n    border-radius: 30px;\n    color: gray;\n    :hover {\n      opacity: 0.7;\n    }\n    :active {\n      opacity: 2;\n    }\n\n    &.active {\n      color: white;\n      background: ${green};\n    }\n  }\n`;\n\nconst NavBar = () => {\n  return (\n    <NavBarBlock>\n      <NavLink exact to=\"/\" className=\"btn\" activeClassName=\"active\">\n        마스크\n      </NavLink>\n      <NavLink to=\"/hospital\" className=\"btn\" activeClassName=\"active\">\n        병원\n      </NavLink>\n      <NavLink to=\"/pharmacy\" className=\"btn\" activeClassName=\"active\">\n        약국\n      </NavLink>\n    </NavBarBlock>\n  );\n};\n\nexport default NavBar;\n","export const green = \"#038C5A\";\nexport const gray = \"#d6d7d8\";\nexport const darkgray = \"#cccccc\";\n","import styled from \"styled-components\";\nimport * as color from \"./color\";\n\nexport const ListCover = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  align-items: center;\n  span {\n    margin: 1rem;\n    font-size: 1.2rem;\n    font-weight: 700;\n    color: ${color.green};\n    margin: 2rem 0rem;\n  }\n`;\n\nexport const List = styled.div`\n  height: 38rem;\n  width: 20rem;\n  overflow: hidden;\n  overflow-y: scroll;\n`;\n\nexport const ListItem = styled.div`\n  background: white;\n  border-radius: 5px;\n  margin: 1.5rem 1rem;\n  padding: 0.3rem;\n  box-shadow: 5px 10px 15px 3px #f3f4f5;\n  transition: 0.3s;\n  :hover {\n    cursor: pointer;\n    z-index: 1;\n    transform: scale(1.1);\n    transition: 0.3s;\n  }\n  p {\n    font-size: 0.9rem;\n    color: gray;\n    margin: 0.3rem 0rem;\n  }\n\n  color: ${(props) => {\n    switch (props.textColor) {\n      case \"plenty\":\n        return \"#038c5a\";\n      case \"some\":\n        return \"#eac351\";\n      case \"few\":\n        return \"#a81c1a\";\n      case \"empty\":\n        return \"black\";\n      default:\n        return \"gray\";\n    }\n  }};\n`;\n","import axios from \"axios\";\nimport { KAKAO_MAP_REST_API_KEY, MASK_URL } from \"config\";\n\n// 마스크 판매처 검색\nexport const getMask = (lat, lng, m) =>\n  axios.get(`${MASK_URL}?lat=${lat}&lng=${lng}&m=${m}`);\n\n// 주소 -> 좌표 검색\nexport const getLatLng = (si, gu, dong, detail) =>\n  axios.get(\n    `https://dapi.kakao.com/v2/local/search/address.json?query=${si} ${gu} ${dong} ${detail}`,\n    {\n      headers: {\n        Authorization: `KakaoAK ${KAKAO_MAP_REST_API_KEY}`,\n      },\n    }\n  );\n\n// 병원(HP8), 약국(PM9) 검색\nexport const getPlace = (lat, lng, code) => {\n  let query = null;\n  switch (code) {\n    case \"PM9\":\n      query = \"약국\";\n      break;\n    case \"HP8\":\n      query = \"병원\";\n      break;\n    default:\n      break;\n  }\n  return axios.get(\n    `https://dapi.kakao.com/v2/local/search/keyword.json?category_group_code=${code}&y=${lat}&x=${lng}&radius=2000&query=${query}`,\n    {\n      headers: {\n        Authorization: `KakaoAK ${KAKAO_MAP_REST_API_KEY}`,\n      },\n    }\n  );\n};\n","export const KAKAO_MAP_REST_API_KEY = \"2cfaeeee24cf1409d4f8fe202ab57261\";\nexport const MASK_URL =\n  \"https://8oi9s0nnth.apigw.ntruss.com/corona19-masks/v1/storesByGeo/json\";\n","import mask from \"icons/mask.png\";\nimport hospital from \"icons/hospital.png\";\nimport pharmacy from \"icons/pharmacy.png\";\nimport curr_mask from \"icons/curr_mask.png\";\nimport curr_hospital from \"icons/curr_hospital.png\";\nimport curr_pharmacy from \"icons/curr_pharmacy.png\";\n\nexport default {\n  mask,\n  hospital,\n  pharmacy,\n  curr_mask,\n  curr_hospital,\n  curr_pharmacy,\n};\n","/* global kakao */\nimport Scroll from \"react-scroll\";\n\nexport const setMarkerInfo = (mode, item, marker, map) => {\n  const content = document.createElement(\"div\");\n  const id = mode === \"MASK\" ? item.code : item.id;\n\n  mode === \"MASK\"\n    ? (content.innerHTML =\n        item.name +\n        \"<br/><span class=\" +\n        item.remain_stat +\n        \">\" +\n        getMaskCount(item.remain_stat) +\n        \"</span>\")\n    : (content.innerHTML = item.place_name);\n\n  content.setAttribute(\"class\", \"markerInfo\");\n\n  let activeId = null;\n  let timeoutId = null;\n\n  const lat = mode === \"MASK\" ? item.lat : item.y;\n  const lng = mode === \"MASK\" ? item.lng : item.x;\n\n  const position = new kakao.maps.LatLng(lat, lng);\n  const customOverlay = new kakao.maps.CustomOverlay({\n    map: map,\n    position: position,\n    content: content,\n    yAnchor: 2.0,\n  });\n\n  customOverlay.setMap();\n\n  const mouseOverHandler = () => {\n    if (timeoutId !== null && id === activeId) {\n      window.clearTimeout(timeoutId);\n      timeoutId = null;\n      return;\n    }\n    customOverlay.setMap(map);\n    activeId = id;\n  };\n\n  const mouseOutHandler = () => {\n    timeoutId = window.setTimeout(function () {\n      customOverlay.setMap();\n      activeId = null;\n      timeoutId = null;\n    }, 25);\n  };\n\n  kakao.maps.event.addListener(marker, \"mouseover\", mouseOverHandler);\n  kakao.maps.event.addListener(marker, \"mouseout\", mouseOutHandler);\n  content.addEventListener(\"mouseover\", mouseOverHandler);\n  content.addEventListener(\"mouseout\", mouseOutHandler);\n};\n\nexport const getMaskCount = (remain_stat) => {\n  switch (remain_stat) {\n    case \"plenty\":\n      return \"100 ~\";\n    case \"some\":\n      return \"30 ~ 100\";\n    case \"few\":\n      return \"2 ~ 30\";\n    case \"empty\":\n      return \"0 ~ 1\";\n    default:\n      return \"X\";\n  }\n};\n\nexport const getMarker = (map, y, x, iconImg, id) => {\n  const position = new window.kakao.maps.LatLng(y, x);\n  const icon = new window.kakao.maps.MarkerImage(\n    iconImg,\n    new window.kakao.maps.Size(40, 48)\n  );\n  let scroller = Scroll.scroller;\n\n  const mouseClickHandler = () => {\n    scroller.scrollTo(id, {\n      duration: 1200,\n      delay: 100,\n      smooth: true,\n      containerId: \"list\",\n      offset: -5,\n    });\n  };\n\n  const marker = new window.kakao.maps.Marker({\n    map: map,\n    position: position,\n    clickable: true,\n    image: icon,\n  });\n\n  kakao.maps.event.addListener(marker, \"click\", mouseClickHandler);\n\n  return marker;\n};\n","const initState = {\n  map: null,\n  mapContainer: {\n    mapCover: null,\n    map: null,\n  },\n  location: { lat: 35.1798200522868, lng: 129.075087492149 },\n  address: { si: \"부산광역시\", gu: \"연제구\", dong: \"\", detail: \"\" },\n  mode: \"\",\n  loading: { GET_LATLNG: false, GET_PLACE: false },\n\n  items: null,\n  marker: {\n    currMarker: {\n      id: null,\n      y: null,\n      x: null,\n      item: null,\n    },\n    markerList: [],\n  },\n};\n\nexport default initState;\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport * as api from \"utils/api\";\nimport icons from \"utils/importIcons\";\nimport { getMarker, setMarkerInfo } from \"components/views/Places/placeUtils\";\nimport initState from \"./initState\";\n\n// action type definition\nconst SET_MARKER = \"position/SET_MARKER\";\nconst SET_CURR_MARKER = \"position/SET_CURR_MARKER\";\nconst SET_CENTER_LIST_CLICK = \"position/SET_CENTER_LIST_CLICK\";\n\nconst UPDATE_MODE = \"position/UPDATE_MODE\";\n\nconst GET_PLACE = \"position/GET_PLACE\";\nconst GET_PLACE_SUCCESS = \"position/GET_PLACE_SUCCESS\";\nconst GET_PLACE_FAILURE = \"position/GET_PLACE_FAILURE\";\n\n// action generator definition\nexport const setMarker = createAction(SET_MARKER, (data) => data);\nexport const setCurrMarker = createAction(SET_CURR_MARKER, (data) => data);\nexport const setCenterListClick = createAction(\n  SET_CENTER_LIST_CLICK,\n  (data) => data\n);\n\nexport const updateMode = createAction(UPDATE_MODE, (data) => data);\n\nexport const getPlaces = (mode, lat, lng, option) => async (dispatch) => {\n  dispatch({ type: GET_PLACE });\n  try {\n    let response, items;\n\n    if (mode === \"MASK\") {\n      response = await api.getMask(lat, lng, option);\n      items = response.data.stores;\n    } else {\n      response = await api.getPlace(lat, lng, option);\n      items = response.data.documents;\n    }\n    dispatch({\n      type: GET_PLACE_SUCCESS,\n      payload: {\n        items: items,\n      },\n    });\n  } catch (e) {\n    dispatch({ type: GET_PLACE_FAILURE, payload: e, error: true });\n    throw e;\n  }\n};\n\n// reducer\nconst places = handleActions(\n  {\n    [SET_MARKER]: (state, action) =>\n      produce(state, (draft) => {\n        const item = action.payload.item;\n        const marker = action.payload.marker;\n\n        marker.setMap(draft.map);\n        draft.marker.markerList.push({\n          id: action.payload.id,\n          marker: marker,\n        });\n        setMarkerInfo(draft.mode, item, marker, draft.map);\n      }),\n\n    [SET_CURR_MARKER]: (state, action) =>\n      produce(state, (draft) => {\n        const curr = draft.marker.currMarker;\n        const newCurr = {\n          id: action.payload.id,\n          y: action.payload.y,\n          x: action.payload.x,\n          item: action.payload.item,\n        };\n\n        draft.marker.markerList.forEach((i) => {\n          if (curr.id && i.id === curr.id) {\n            i.marker.setMap(null);\n            i.marker = getMarker(\n              draft.map,\n              curr.y,\n              curr.x,\n              icons[draft.mode.toLowerCase()],\n              curr.id\n            );\n            i.marker.setMap(draft.map);\n            setMarkerInfo(draft.mode, curr.item, i.marker, draft.map);\n          }\n          if (i.id === newCurr.id) {\n            i.marker.setMap(null);\n            i.marker = getMarker(\n              draft.map,\n              newCurr.y,\n              newCurr.x,\n              icons[\"curr_\" + draft.mode.toLowerCase()],\n              newCurr.id\n            );\n            i.marker.setMap(draft.map);\n            setMarkerInfo(draft.mode, newCurr.item, i.marker, draft.map);\n          }\n        });\n\n        draft.marker.currMarker.id = newCurr.id;\n        draft.marker.currMarker.y = newCurr.y;\n        draft.marker.currMarker.x = newCurr.x;\n        draft.marker.currMarker.item = newCurr.item;\n      }),\n\n    [SET_CENTER_LIST_CLICK]: (state, action) =>\n      produce(state, (draft) => {\n        const coords = new window.kakao.maps.LatLng(\n          action.payload.y,\n          action.payload.x\n        );\n        draft.map.panTo(coords);\n      }),\n\n    [UPDATE_MODE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.mode = action.payload.mode;\n      }),\n\n    [GET_PLACE]: (state) =>\n      produce(state, (draft) => {\n        draft.loading.GET_PLACE = true;\n      }),\n    [GET_PLACE_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.loading.GET_PLACE = false;\n        draft.items = action.payload.items;\n      }),\n    [GET_PLACE_FAILURE]: (state) =>\n      produce(state, (draft) => {\n        draft.loading.GET_PLACE = false;\n      }),\n  },\n  initState\n);\n\nexport default places;\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListCover, List, ListItem } from \"components/views/styles/PlaceStyle\";\nimport {\n  setMarker,\n  setCurrMarker,\n  setCenterListClick,\n  updateMode,\n  getPlaces,\n} from \"modules/places\";\nimport icons from \"utils/importIcons\";\nimport \"../Places.css\";\nimport { getMaskCount, getMarker } from \"../placeUtils\";\nimport Scroll from \"react-scroll\";\n\nconst Mask = ({\n  items,\n  loading,\n  location,\n  map,\n\n  getPlaces,\n  updateMode,\n  setCenterListClick,\n  setCurrMarker,\n  setMarker,\n}) => {\n  useEffect(() => {\n    updateMode({ mode: \"MASK\" });\n    getPlaces(\"MASK\", location.lat, location.lng, 2000);\n  }, [location.lat, location.lng, updateMode, getPlaces]);\n\n  let Element = Scroll.Element;\n\n  if (loading) {\n    return (\n      <ListCover>\n        <List>로딩중 . . .</List>\n      </ListCover>\n    );\n  }\n  if (!items) {\n    return <div>error</div>;\n  }\n\n  if (items) {\n    items.forEach((item) => {\n      const marker = getMarker(map, item.lat, item.lng, icons.mask, item.code);\n      setMarker({ id: item.code, marker: marker, item: item });\n    });\n  }\n\n  return (\n    <ListCover>\n      <span>마스크 판매처 검색</span>\n      <List id=\"list\">\n        {items.map((item, index) => {\n          return (\n            <Element name={item.code}>\n              <ListItem\n                key={index}\n                onClick={() => {\n                  setCenterListClick({ y: item.lat, x: item.lng });\n                  setCurrMarker({\n                    id: item.code,\n                    y: item.lat,\n                    x: item.lng,\n                    item: item,\n                  });\n                }}\n                textColor={item.remain_stat}\n                id={item.code}\n              >\n                <h3>{item.name}</h3>\n                <h5 style={{ margin: \"0.2rem\" }}>\n                  {getMaskCount(item.remain_stat)}\n                </h5>\n                <p>{item.addr}</p>\n                <p>데이터 생성일: {item.created_at}</p>\n                <p>입고시간: {item.stock_at}</p>\n              </ListItem>\n            </Element>\n          );\n        })}\n      </List>\n    </ListCover>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    items: state.items,\n    loading: state.loading.GET_PLACE,\n    location: state.location,\n    map: state.map,\n  }),\n  (dispatch) => ({\n    getPlaces: (mode, lat, lng, meter) =>\n      dispatch(getPlaces(mode, lat, lng, meter)),\n    updateMode: (data) => dispatch(updateMode(data)),\n    setCenterListClick: (data) => dispatch(setCenterListClick(data)),\n    setCurrMarker: (data) => dispatch(setCurrMarker(data)),\n    setMarker: (data) => dispatch(setMarker(data)),\n  })\n)(Mask);\n","import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\nimport * as api from \"utils/api\";\nimport initState from \"./initState\";\n\n// action type definition\nconst SET_ADDRESS = \"position/SET_ADDRESS\";\nconst SET_MAP = \"position/SET_MAP\";\nconst SET_MAP_LEVEL = \"position/SET_MAP_LEVEL\";\nconst SET_CENTER_PIN_CLICK = \"position/SET_CENTER_PIN_CLICK\";\n\nconst GET_LATLNG = \"position/GET_LATLNG\";\nconst GET_LATLNG_SUCCESS = \"position/GET_LATLNG_SUCCESS\";\nconst GET_LATLNG_FAILURE = \"position/GET_LATLNG_FAILURE\";\n\n// action generator definition\nexport const setAddress = createAction(SET_ADDRESS, (data) => data);\nexport const setMap = createAction(SET_MAP, (data) => data);\nexport const setMapLevel = createAction(SET_MAP_LEVEL, (data) => data);\nexport const setCenterPinClick = createAction(SET_CENTER_PIN_CLICK);\n\nexport const getLatLng = (si, gu, dong, detail) => async (dispatch) => {\n  dispatch({ type: GET_LATLNG });\n  try {\n    const response = await api.getLatLng(si, gu, dong, detail);\n    dispatch({\n      type: GET_LATLNG_SUCCESS,\n      payload: {\n        lat: Number(response.data.documents[0].y),\n        lng: Number(response.data.documents[0].x),\n      },\n    });\n  } catch (e) {\n    alert(\"찾으시는 주소가 없습니다.\\n다시 입력해주세요!\");\n    dispatch({ type: GET_LATLNG_FAILURE, payload: e, error: true });\n  }\n};\n\n// reducer\nconst position = handleActions(\n  {\n    [SET_ADDRESS]: (state, action) => {\n      const name = action.payload.name;\n      const value = action.payload.value;\n\n      switch (name) {\n        case \"si\":\n          return produce(state, (draft) => {\n            if (value === \"\") draft.address.si = \"\";\n            else draft.address[name] = value;\n\n            draft.address.gu = \"\";\n            draft.address.dong = \"\";\n            draft.address.detail = \"\";\n          });\n        case \"gu\":\n          return produce(state, (draft) => {\n            if (value === \"\") draft.address.gu = \"\";\n            else draft.address[name] = value;\n\n            draft.address.dong = \"\";\n            draft.address.detail = \"\";\n          });\n        case \"dong\":\n          return produce(state, (draft) => {\n            if (value === \"\") draft.address.dong = \"\";\n            else draft.address[name] = value;\n\n            draft.address.detail = \"\";\n          });\n        default:\n          return produce(state, (draft) => {\n            draft.address[name] = value;\n          });\n      }\n    },\n\n    [SET_MAP]: (state, action) =>\n      produce(state, (draft) => {\n        // initial about map, etc ...\n        draft.marker.currMarker = {\n          id: null,\n          y: null,\n          x: null,\n          item: null,\n        };\n        draft.marker.markerList = [];\n        draft.items = null;\n        if (draft.mapContainer.mapCover)\n          draft.mapContainer.mapCover.removeChild(draft.mapContainer.map);\n\n        draft.map = new window.kakao.maps.Map(\n          action.payload.container,\n          action.payload.options\n        );\n        draft.mapContainer.mapCover = action.payload.mapCover;\n        draft.mapContainer.map = action.payload.container;\n      }),\n\n    [SET_MAP_LEVEL]: (state, action) =>\n      produce(state, (draft) => {\n        const level = draft.map.getLevel();\n        switch (action.payload.level) {\n          case \"plus\":\n            draft.map.setLevel(level + 1);\n            break;\n          case \"minus\":\n            draft.map.setLevel(level - 1);\n            break;\n          default:\n            break;\n        }\n      }),\n\n    [SET_CENTER_PIN_CLICK]: (state) =>\n      produce(state, (draft) => {\n        const center = draft.map.getCenter();\n        draft.location.lat = center.getLat();\n        draft.location.lng = center.getLng();\n      }),\n\n    [GET_LATLNG]: (state) =>\n      produce(state, (draft) => {\n        draft.loading.GET_LATLNG = true;\n      }),\n    [GET_LATLNG_SUCCESS]: (state, action) =>\n      produce(state, (draft) => {\n        draft.loading.GET_LATLNG = false;\n        draft.location.lat = action.payload.lat;\n        draft.location.lng = action.payload.lng;\n        const coords = new window.kakao.maps.LatLng(\n          action.payload.lat,\n          action.payload.lng\n        );\n        draft.map.setCenter(coords);\n      }),\n    [GET_LATLNG_FAILURE]: (state) =>\n      produce(state, (draft) => {\n        draft.loading.GET_LATLNG = false;\n      }),\n  },\n  initState\n);\n\nexport default position;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\n\nimport styled from \"styled-components\";\nimport { green } from \"../styles/color\";\nimport { TiPlus, TiMinus } from \"react-icons/ti\";\nimport { FaMapPin } from \"react-icons/fa\";\nimport { setMapLevel, setCenterPinClick } from \"modules/position\";\n\nconst OptionButtonBlock = styled.div`\n  position: absolute;\n  display: flex;\n  flex-flow: row wrap;\n\n  bottom: 10px;\n  right: 10px;\n  z-index: 1;\n`;\n\nconst Button = styled.div`\n  margin: 0 auto;\n  padding: 0.6rem;\n  background: ${green};\n  color: white;\n  width: 1.2rem;\n  height: 1.2rem;\n  font-size: 1rem;\n  border: 2px solid white;\n  cursor: pointer;\n  :hover {\n    opacity: 0.8;\n  }\n  :active {\n    opacity: 2;\n  }\n  &.left {\n    border-right: none;\n    border-radius: 1.5rem 0 0 1.5rem;\n    padding-left: 0.8rem;\n  }\n  &.right {\n    border-left: none;\n    border-radius: 0 1.5rem 1.5rem 0;\n    padding-right: 0.8rem;\n  }\n  &.pin {\n    border-radius: 2rem;\n    margin-left: 1rem;\n  }\n`;\n\nconst MapOptionButton = ({ setMapLevel, setCenterPinClick }) => {\n  return (\n    <div>\n      <OptionButtonBlock>\n        <Button\n          type=\"button\"\n          className=\"left\"\n          onClick={() => setMapLevel({ level: \"plus\" })}\n        >\n          <TiPlus />\n        </Button>\n        <Button\n          type=\"button\"\n          className=\"right\"\n          onClick={() => setMapLevel({ level: \"minus\" })}\n        >\n          <TiMinus />\n        </Button>\n        <Button\n          type=\"button\"\n          className=\"pin\"\n          onClick={() => setCenterPinClick()}\n        >\n          <FaMapPin />\n        </Button>\n      </OptionButtonBlock>\n    </div>\n  );\n};\n\nexport default connect(null, (dispatch) => ({\n  setMapLevel: (data) => dispatch(setMapLevel(data)),\n  setCenterPinClick: () => dispatch(setCenterPinClick()),\n}))(MapOptionButton);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { setMap } from \"modules/position\";\nimport \"./Map.css\";\nimport MapOptionButton from \"./MapOptionButton\";\n\nconst Map = ({ mode, location, setMap }) => {\n  useEffect(() => {\n    let mapCover = document.getElementById(\"map-cover\");\n    let container = document.createElement(\"div\");\n    container.setAttribute(\"class\", \"map\");\n    mapCover.appendChild(container);\n    const options = {\n      center: new window.kakao.maps.LatLng(location.lat, location.lng),\n      level: 5,\n    };\n    setMap({ container, options, mapCover });\n  }, [mode, location.lat, location.lng, setMap]);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        flexFlow: \"column wrap\",\n        position: \"relative\",\n      }}\n    >\n      <div id=\"map-cover\" />\n      <MapOptionButton />\n    </div>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    mode: state.mode,\n    location: state.location,\n  }),\n  (dispatch) => ({\n    setMap: (data) => dispatch(setMap(data)),\n  })\n)(Map);\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { setAddress, getLatLng } from \"modules/position\";\nimport { GoSearch } from \"react-icons/go\";\nimport { green } from \"../styles/color\";\n\nconst SearchAddressBlock = styled.div`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: center;\n  margin: 2rem 0rem;\n\n  button {\n    width: 4.5rem;\n    font-size: 1rem;\n    padding: 0.5rem 0.7rem;\n    border: none;\n    background: ${green};\n    cursor: pointer;\n    outline: none;\n    :hover {\n      opacity: 0.7;\n    }\n    :active {\n      opacity: 2;\n    }\n  }\n`;\n\nconst DropDownInputCover = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n`;\n\nconst DropDown = styled.div`\n  select {\n    color: gray;\n    border: none;\n    cursor: pointer;\n    padding: 0.5rem 0.7rem;\n    font-size: 1rem;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n  }\n`;\n\nconst Input = styled.div`\n  input {\n    width: 100%;\n    color: gray;\n    border: none;\n    padding: 0.5rem 0.7rem;\n    font-size: 1rem;\n    appearance: none;\n    -webkit-appearance: none;\n    outline: none;\n  }\n`;\n\nconst SearchAddress = ({ address, setAddress, getLatLng }) => {\n  const sigu = require(\"utils/sigu.json\");\n  const sigudong = require(\"utils/sigudong.json\");\n\n  return (\n    <SearchAddressBlock>\n      <DropDownInputCover>\n        <DropDown>\n          <select\n            name=\"si\"\n            onChange={(event) =>\n              setAddress({ name: \"si\", value: event.target.value })\n            }\n            value={address.si}\n          >\n            <option value=\"\">시도명</option>\n            {sigu.map((i) => (\n              <option key={i.si} value={i.si}>\n                {i.si}\n              </option>\n            ))}\n          </select>\n\n          <select\n            name=\"gu\"\n            onChange={(event) =>\n              setAddress({ name: \"gu\", value: event.target.value })\n            }\n            value={address.gu}\n          >\n            <option value=\"\">시군구명</option>\n            {address.si !== null &&\n              sigu.map((i) => {\n                if (i.si === address.si) {\n                  return i[\"gu\"].map((j) => (\n                    <option key={j} value={j}>\n                      {j}\n                    </option>\n                  ));\n                }\n              })}\n          </select>\n\n          <select\n            name=\"dong\"\n            onChange={(event) =>\n              setAddress({ name: \"dong\", value: event.target.value })\n            }\n            value={address.dong}\n          >\n            <option value=\"\">읍면동명</option>\n            {address.gu !== null &&\n              sigudong\n                .filter(\n                  (i) => i.si === address.si && i.gu === address.gu && i.dong\n                )\n                .map((i) => (\n                  <option key={i.dong} value={i.dong}>\n                    {i.dong}\n                  </option>\n                ))}\n          </select>\n        </DropDown>\n        <Input>\n          <input\n            type=\"text\"\n            placeholder=\"상세주소\"\n            onChange={(event) =>\n              setAddress({ name: \"detail\", value: event.target.value })\n            }\n          />\n        </Input>\n      </DropDownInputCover>\n      <button\n        onClick={() =>\n          getLatLng(address.si, address.gu, address.dong, address.detail)\n        }\n      >\n        <GoSearch color=\"#ffffff\" />\n      </button>\n    </SearchAddressBlock>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    address: state.address,\n  }),\n  (dispatch) => ({\n    setAddress: (data) => dispatch(setAddress(data)),\n    getLatLng: (si, gu, dong, detail) =>\n      dispatch(getLatLng(si, gu, dong, detail)),\n  })\n)(SearchAddress);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListCover, List, ListItem } from \"components/views/styles/PlaceStyle\";\nimport {\n  setMarker,\n  setCurrMarker,\n  setCenterListClick,\n  updateMode,\n  getPlaces,\n} from \"modules/places\";\nimport icons from \"utils/importIcons\";\nimport { getMarker } from \"../placeUtils\";\nimport Scroll from \"react-scroll\";\n\nconst Hospital = ({\n  items,\n  loading,\n  location,\n  map,\n\n  getPlaces,\n  updateMode,\n  setCenterListClick,\n  setCurrMarker,\n  setMarker,\n}) => {\n  useEffect(() => {\n    updateMode({ mode: \"HOSPITAL\" });\n    getPlaces(\"HOSPITAL\", location.lat, location.lng, \"HP8\");\n  }, [location.lat, location.lng, updateMode, getPlaces]);\n\n  let Element = Scroll.Element;\n\n  if (loading) {\n    return (\n      <ListCover>\n        <List>로딩중 . . .</List>\n      </ListCover>\n    );\n  }\n  if (!items) {\n    return <div>error</div>;\n  }\n\n  if (items) {\n    items.forEach((item) => {\n      const marker = getMarker(map, item.y, item.x, icons.hospital, item.id);\n      setMarker({ id: item.id, marker: marker, item: item });\n    });\n  }\n  return (\n    <ListCover>\n      <span>병원 검색</span>\n      <List id=\"list\">\n        {items.map((item, index) => {\n          return (\n            <Element name={item.id}>\n              <ListItem\n                key={index}\n                onClick={() => {\n                  setCenterListClick({ y: item.y, x: item.x });\n                  setCurrMarker({\n                    id: item.id,\n                    y: item.y,\n                    x: item.x,\n                    item: item,\n                  });\n                }}\n              >\n                <h3>{item.place_name}</h3>\n                <p>{item.road_address_name}</p>\n                <p>{item.category_name}</p>\n              </ListItem>\n            </Element>\n          );\n        })}\n      </List>\n    </ListCover>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    items: state.items,\n    loading: state.loading.GET_PLACE,\n    location: state.location,\n    map: state.map,\n  }),\n  (dispatch) => ({\n    getPlaces: (mode, lat, lng, meter) =>\n      dispatch(getPlaces(mode, lat, lng, meter)),\n    updateMode: (data) => dispatch(updateMode(data)),\n    setCenterListClick: (data) => dispatch(setCenterListClick(data)),\n    setCurrMarker: (data) => dispatch(setCurrMarker(data)),\n    setMarker: (data) => dispatch(setMarker(data)),\n  })\n)(Hospital);\n","import React, { useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport { ListCover, List, ListItem } from \"components/views/styles/PlaceStyle\";\nimport {} from \"modules/position\";\nimport {\n  setMarker,\n  setCurrMarker,\n  setCenterListClick,\n  updateMode,\n  getPlaces,\n} from \"modules/places\";\nimport icons from \"utils/importIcons\";\nimport { getMarker } from \"../placeUtils\";\nimport Scroll from \"react-scroll\";\n\nconst Pharmacy = ({\n  items,\n  loading,\n  location,\n  map,\n\n  getPlaces,\n  updateMode,\n  setCenterListClick,\n  setCurrMarker,\n  setMarker,\n}) => {\n  useEffect(() => {\n    updateMode({ mode: \"PHARMACY\" });\n    getPlaces(\"PHARMACY\", location.lat, location.lng, \"PM9\");\n  }, [location.lat, location.lng, updateMode, getPlaces]);\n\n  let Element = Scroll.Element;\n\n  if (loading) {\n    return (\n      <ListCover>\n        <List>로딩중 . . .</List>\n      </ListCover>\n    );\n  }\n  if (!items) {\n    return <div>error</div>;\n  }\n\n  if (items) {\n    items.forEach((item) => {\n      const marker = getMarker(map, item.y, item.x, icons.pharmacy, item.id);\n      setMarker({ id: item.id, marker: marker, item: item });\n    });\n  }\n\n  return (\n    <ListCover>\n      <span>약국 검색</span>\n      <List id=\"list\">\n        {items.map((item, index) => {\n          return (\n            <Element name={item.id}>\n              <ListItem\n                key={index}\n                onClick={() => {\n                  setCenterListClick({ y: item.y, x: item.x });\n                  setCurrMarker({\n                    id: item.id,\n                    y: item.y,\n                    x: item.x,\n                    item: item,\n                  });\n                }}\n              >\n                <h3>{item.place_name}</h3>\n                <p>{item.road_address_name}</p>\n                <p>{item.category_name}</p>\n              </ListItem>\n            </Element>\n          );\n        })}\n      </List>\n    </ListCover>\n  );\n};\n\nexport default connect(\n  (state) => ({\n    items: state.items,\n    loading: state.loading.GET_PLACE,\n    location: state.location,\n    map: state.map,\n  }),\n  (dispatch) => ({\n    getPlaces: (mode, lat, lng, meter) =>\n      dispatch(getPlaces(mode, lat, lng, meter)),\n    updateMode: (data) => dispatch(updateMode(data)),\n    setCenterListClick: (data) => dispatch(setCenterListClick(data)),\n    setCurrMarker: (data) => dispatch(setCurrMarker(data)),\n    setMarker: (data) => dispatch(setMarker(data)),\n  })\n)(Pharmacy);\n","import React from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"./views/NavBar/NavBar\";\nimport Mask from \"./views/Places/Mask/Mask\";\nimport Map from \"./views/Map/Map\";\nimport styled from \"styled-components\";\nimport SearchAddress from \"./views/SearchAddress/SearchAddress\";\nimport Hospital from \"./views/Places/Hospital/Hospital\";\nimport Pharmacy from \"./views/Places/Pharmacy/Pharmacy\";\n\nconst Block = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  justify-content: center;\n`;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router basename={process.env.PUBLIC_URL}>\n        <div\n          style={{\n            display: \"flex\",\n            flexFlow: \"row wrap\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Block style={{ marginRight: \"2rem\" }}>\n            <NavBar />\n            <SearchAddress />\n            <Map />\n          </Block>\n          <Block>\n            <Switch>\n              <Route exact path=\"/\" component={Mask} />\n              <Route path=\"/hospital\" component={Hospital} />\n              <Route path=\"/pharmacy\" component={Pharmacy} />\n            </Switch>\n          </Block>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware } from \"redux\";\nimport reduceReducers from \"reduce-reducers\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport ReduxThunk from \"redux-thunk\";\nimport position from \"./position\";\nimport places from \"./places\";\nimport initState from \"./initState\";\n\nconst reducer = reduceReducers(initState, position, places);\n\nexport default createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(ReduxThunk))\n);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport store from \"./modules/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/mask.bd2cf6c1.png\";","module.exports = __webpack_public_path__ + \"static/media/hospital.77bfab85.png\";","module.exports = __webpack_public_path__ + \"static/media/pharmacy.b8759239.png\";","module.exports = __webpack_public_path__ + \"static/media/curr_mask.98717905.png\";","module.exports = __webpack_public_path__ + \"static/media/curr_hospital.d04daba4.png\";","module.exports = __webpack_public_path__ + \"static/media/curr_pharmacy.b34eb2e7.png\";"],"sourceRoot":""}